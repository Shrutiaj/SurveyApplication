import { DatepickerRenderOptions, BsDatepickerViewMode } from './models';
/**
 * For date range picker there are `BsDaterangepickerConfig` which inherits all properties,
 * except `displayMonths`, for range picker it default to `2`
 */
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerConfig implements DatepickerRenderOptions {
    value?: Date | Date[];
    isDisabled?: boolean;
    /**
     * Default min date for all date/range pickers
     */
    minDate?: Date;
    /**
     * Default max date for all date/range pickers
     */
    maxDate?: Date;
    daysDisabled?: number[];
    /**
     * Makes dates from other months active
     */
    selectFromOtherMonth?: boolean;
    /**
     * Add class to current day
     */
    customTodayClass?: string;
    /**
     * Defaut mode for all date pickers
     */
    minMode?: BsDatepickerViewMode;
    /** CSS class which will be applied to datepicker container,
     * usually used to set color theme
     */
    containerClass: string;
    displayMonths: number;
    /**
     * Allows to hide week numbers in datepicker
     */
    showWeekNumbers: boolean;
    dateInputFormat: string;
    rangeSeparator: string;
    /**
     * Date format for date range input field
     */
    rangeInputFormat: string;
    monthTitle: string;
    yearTitle: string;
    dayLabel: string;
    monthLabel: string;
    yearLabel: string;
    weekNumbers: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerConfig, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerConfig>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5jb25maWcuZC50cyIsInNvdXJjZXMiOlsiYnMtZGF0ZXBpY2tlci5jb25maWcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRlcGlja2VyUmVuZGVyT3B0aW9ucywgQnNEYXRlcGlja2VyVmlld01vZGUgfSBmcm9tICcuL21vZGVscyc7XG4vKipcbiAqIEZvciBkYXRlIHJhbmdlIHBpY2tlciB0aGVyZSBhcmUgYEJzRGF0ZXJhbmdlcGlja2VyQ29uZmlnYCB3aGljaCBpbmhlcml0cyBhbGwgcHJvcGVydGllcyxcbiAqIGV4Y2VwdCBgZGlzcGxheU1vbnRoc2AsIGZvciByYW5nZSBwaWNrZXIgaXQgZGVmYXVsdCB0byBgMmBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQnNEYXRlcGlja2VyQ29uZmlnIGltcGxlbWVudHMgRGF0ZXBpY2tlclJlbmRlck9wdGlvbnMge1xuICAgIHZhbHVlPzogRGF0ZSB8IERhdGVbXTtcbiAgICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IG1pbiBkYXRlIGZvciBhbGwgZGF0ZS9yYW5nZSBwaWNrZXJzXG4gICAgICovXG4gICAgbWluRGF0ZT86IERhdGU7XG4gICAgLyoqXG4gICAgICogRGVmYXVsdCBtYXggZGF0ZSBmb3IgYWxsIGRhdGUvcmFuZ2UgcGlja2Vyc1xuICAgICAqL1xuICAgIG1heERhdGU/OiBEYXRlO1xuICAgIGRheXNEaXNhYmxlZD86IG51bWJlcltdO1xuICAgIC8qKlxuICAgICAqIE1ha2VzIGRhdGVzIGZyb20gb3RoZXIgbW9udGhzIGFjdGl2ZVxuICAgICAqL1xuICAgIHNlbGVjdEZyb21PdGhlck1vbnRoPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBZGQgY2xhc3MgdG8gY3VycmVudCBkYXlcbiAgICAgKi9cbiAgICBjdXN0b21Ub2RheUNsYXNzPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIERlZmF1dCBtb2RlIGZvciBhbGwgZGF0ZSBwaWNrZXJzXG4gICAgICovXG4gICAgbWluTW9kZT86IEJzRGF0ZXBpY2tlclZpZXdNb2RlO1xuICAgIC8qKiBDU1MgY2xhc3Mgd2hpY2ggd2lsbCBiZSBhcHBsaWVkIHRvIGRhdGVwaWNrZXIgY29udGFpbmVyLFxuICAgICAqIHVzdWFsbHkgdXNlZCB0byBzZXQgY29sb3IgdGhlbWVcbiAgICAgKi9cbiAgICBjb250YWluZXJDbGFzczogc3RyaW5nO1xuICAgIGRpc3BsYXlNb250aHM6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBBbGxvd3MgdG8gaGlkZSB3ZWVrIG51bWJlcnMgaW4gZGF0ZXBpY2tlclxuICAgICAqL1xuICAgIHNob3dXZWVrTnVtYmVyczogYm9vbGVhbjtcbiAgICBkYXRlSW5wdXRGb3JtYXQ6IHN0cmluZztcbiAgICByYW5nZVNlcGFyYXRvcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIERhdGUgZm9ybWF0IGZvciBkYXRlIHJhbmdlIGlucHV0IGZpZWxkXG4gICAgICovXG4gICAgcmFuZ2VJbnB1dEZvcm1hdDogc3RyaW5nO1xuICAgIG1vbnRoVGl0bGU6IHN0cmluZztcbiAgICB5ZWFyVGl0bGU6IHN0cmluZztcbiAgICBkYXlMYWJlbDogc3RyaW5nO1xuICAgIG1vbnRoTGFiZWw6IHN0cmluZztcbiAgICB5ZWFyTGFiZWw6IHN0cmluZztcbiAgICB3ZWVrTnVtYmVyczogc3RyaW5nO1xufVxuIl19