import { TimeUnit } from 'ngx-bootstrap/chronos';
import { Action } from 'ngx-bootstrap/mini-ngrx';
import { BsDatepickerViewMode, BsViewNavigationEvent, CellHoverEvent, DatepickerRenderOptions } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerActions {
    static readonly CALCULATE: string;
    static readonly FORMAT: string;
    static readonly FLAG: string;
    static readonly SELECT: string;
    static readonly NAVIGATE_OFFSET: string;
    static readonly NAVIGATE_TO: string;
    static readonly SET_OPTIONS: string;
    static readonly HOVER: string;
    static readonly CHANGE_VIEWMODE: string;
    static readonly SET_MIN_DATE: string;
    static readonly SET_MAX_DATE: string;
    static readonly SET_DAYSDISABLED: string;
    static readonly SET_IS_DISABLED: string;
    static readonly SET_LOCALE: string;
    static readonly SELECT_RANGE: string;
    calculate(): Action;
    format(): Action;
    flag(): Action;
    select(date: Date): Action;
    changeViewMode(event: BsDatepickerViewMode): Action;
    navigateTo(event: BsViewNavigationEvent): Action;
    navigateStep(step: TimeUnit): Action;
    setOptions(options: DatepickerRenderOptions): Action;
    selectRange(value: Date[]): Action;
    hoverDay(event: CellHoverEvent): Action;
    minDate(date: Date): Action;
    maxDate(date: Date): Action;
    daysDisabled(days: number[]): Action;
    isDisabled(value: boolean): Action;
    setLocale(locale: string): Action;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerActions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerActions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5hY3Rpb25zLmQudHMiLCJzb3VyY2VzIjpbImJzLWRhdGVwaWNrZXIuYWN0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaW1lVW5pdCB9IGZyb20gJ25neC1ib290c3RyYXAvY2hyb25vcyc7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICduZ3gtYm9vdHN0cmFwL21pbmktbmdyeCc7XG5pbXBvcnQgeyBCc0RhdGVwaWNrZXJWaWV3TW9kZSwgQnNWaWV3TmF2aWdhdGlvbkV2ZW50LCBDZWxsSG92ZXJFdmVudCwgRGF0ZXBpY2tlclJlbmRlck9wdGlvbnMgfSBmcm9tICcuLi9tb2RlbHMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQnNEYXRlcGlja2VyQWN0aW9ucyB7XG4gICAgc3RhdGljIHJlYWRvbmx5IENBTENVTEFURTogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBGT1JNQVQ6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgRkxBRzogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBTRUxFQ1Q6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgTkFWSUdBVEVfT0ZGU0VUOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IE5BVklHQVRFX1RPOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9PUFRJT05TOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IEhPVkVSOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IENIQU5HRV9WSUVXTU9ERTogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfTUlOX0RBVEU6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX01BWF9EQVRFOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9EQVlTRElTQUJMRUQ6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0lTX0RJU0FCTEVEOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9MT0NBTEU6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VMRUNUX1JBTkdFOiBzdHJpbmc7XG4gICAgY2FsY3VsYXRlKCk6IEFjdGlvbjtcbiAgICBmb3JtYXQoKTogQWN0aW9uO1xuICAgIGZsYWcoKTogQWN0aW9uO1xuICAgIHNlbGVjdChkYXRlOiBEYXRlKTogQWN0aW9uO1xuICAgIGNoYW5nZVZpZXdNb2RlKGV2ZW50OiBCc0RhdGVwaWNrZXJWaWV3TW9kZSk6IEFjdGlvbjtcbiAgICBuYXZpZ2F0ZVRvKGV2ZW50OiBCc1ZpZXdOYXZpZ2F0aW9uRXZlbnQpOiBBY3Rpb247XG4gICAgbmF2aWdhdGVTdGVwKHN0ZXA6IFRpbWVVbml0KTogQWN0aW9uO1xuICAgIHNldE9wdGlvbnMob3B0aW9uczogRGF0ZXBpY2tlclJlbmRlck9wdGlvbnMpOiBBY3Rpb247XG4gICAgc2VsZWN0UmFuZ2UodmFsdWU6IERhdGVbXSk6IEFjdGlvbjtcbiAgICBob3ZlckRheShldmVudDogQ2VsbEhvdmVyRXZlbnQpOiBBY3Rpb247XG4gICAgbWluRGF0ZShkYXRlOiBEYXRlKTogQWN0aW9uO1xuICAgIG1heERhdGUoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcbiAgICBkYXlzRGlzYWJsZWQoZGF5czogbnVtYmVyW10pOiBBY3Rpb247XG4gICAgaXNEaXNhYmxlZCh2YWx1ZTogYm9vbGVhbik6IEFjdGlvbjtcbiAgICBzZXRMb2NhbGUobG9jYWxlOiBzdHJpbmcpOiBBY3Rpb247XG59XG4iXX0=